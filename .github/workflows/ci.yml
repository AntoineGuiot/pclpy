on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types: [published]

jobs:
  build-linux:
    name: Build Linux
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: goanpeca/setup-miniconda@v1.0.2
        with:
          auto-update-conda: true
          activate-environment: pclpy
          environment-file: environment.yml
          python-version: 3.8
      - name: Install ccache
        run: sudo apt-get install -y ccache
      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time
      - uses: actions/cache@v1
        id: cache
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ steps.current-time.outputs.time }}
          restore-keys: |
            ${{ runner.os }}-ccache-
      - name: Ccache stats
        run: |
          ccache -s
          ccache -z
      - name: Setup build environment
        shell: bash -l {0}
        run: |
          python -m pip install -r requirements-dev.txt
          scripts/download_pcl.sh
          scripts/generate_points_and_bindings.sh
      - shell: bash -l {0}
        run: python setup.py build
      - shell: bash -l {0}
        run: python -m pip install -e --no-deps .
      - shell: bash -l {0}
        run: pytest
      - run: conda install -q -y anaconda-client conda-build
      - run: conda build -c conda-forge --output-folder . .
      - name: Ccache stats
        if: always()
        run: ccache -s
      - name: Upload to anaconda
        # if: github.event_name == 'release'
        shell: bash -l {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: anaconda upload --label main linux-64/*.tar.bz2
  build-windows:
    name: Build Windows
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: s-weigand/setup-conda@v1
        with:
          activate-conda: true
          update-conda: true
          conda-channels: conda-forge
      - run: conda env create -q -n pclpy -f environment.yml
      - run: conda run -n pclpy python -c "import sys; print(sys.version)"
      - run: conda run -n pclpy python -m pip install -r requirements-dev.txt
      - name: Download pcl
        shell: pwsh
        run: scripts/download_pcl.ps1
      - run: conda run -n pclpy scripts/generate_points_and_bindings.bat
      - run: conda run -n pclpy python setup.py build
      - run: conda run -n pclpy python -m pip install --no-deps .
      - run: conda run -n pclpy pytest
      - run: conda install -q -y anaconda-client conda-build console_shortcut powershell_shortcut
      - run: conda run -n base conda build -c conda-forge --output-folder . .
      - run: dir
      - run: cd win-64 && dir
      - name: Upload to anaconda
        # if: github.event_name == 'release'
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: anaconda upload --label main win-64/*.tar.bz2
